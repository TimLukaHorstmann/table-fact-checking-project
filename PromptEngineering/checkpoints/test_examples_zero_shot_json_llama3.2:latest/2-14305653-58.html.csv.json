[
  {
    "table_id": "2-14305653-58.html.csv",
    "claim": "the yugoslavian national team win both of its friendly match by a score of 2:1",
    "predicted_response": 0,
    "resp": "{\"answer\": \"FALSE\", \"relevant_cells\": [{\"row_index\": 2, \"column_name\": \"type of game\"}, {\"row_index\": 4, \"column_name\": \"results\"}]}",
    "true_response": 1,
    "relevant_cells": [
      {
        "row_index": 2,
        "column_name": "type of game"
      },
      {
        "row_index": 4,
        "column_name": "results"
      }
    ]
  },
  {
    "table_id": "2-14305653-58.html.csv",
    "claim": "the yugoslavian national team fail to score only 1 time , drop a world cup qualify match 0:2 against italy",
    "predicted_response": 0,
    "resp": "{\"answer\": \"FALSE\", \"relevant_cells\": [{\"row_index\": 4, \"column_name\": \"results\"}, {\"row_index\": 5, \"column_name\": \"results\"}]}",
    "true_response": 1,
    "relevant_cells": [
      {
        "row_index": 4,
        "column_name": "results"
      },
      {
        "row_index": 5,
        "column_name": "results"
      }
    ]
  },
  {
    "table_id": "2-14305653-58.html.csv",
    "claim": "the yugoslavian national team score 7 goal and allow 3 against in the 3 1982 world cup qualify match",
    "predicted_response": 0,
    "resp": "{\n  \"answer\": \"FALSE\",\n  \"relevant_cells\": []\n}",
    "true_response": 1,
    "relevant_cells": []
  },
  {
    "table_id": "2-14305653-58.html.csv",
    "claim": "the yugoslavian national team score 7 goal and allow 3 against in the 2 1982 world cup qualify score",
    "predicted_response": 0,
    "resp": "function claimEvaluation(data) {\n  const answer = data.find(\n    (game) =>\n      game[2] === \"yugoslavia\" && \n      (game[4] === \"1982 wcq\" ? game[5] === \"win\" : \n       ((game[5] === 'loss' && game[3].split(\":\")[0] === \"7\") || \n        (game[5] === 'draw' && game[3].split(\":\")[0] === \"7\")))) &&\n    !((game[4] === \"1982 wcq\" ? game[5] === \"loss\" : \n       ((game[5] === 'win' && game[3].split(\":\")[1] === \"3\") || \n        (game[5] === 'draw' && game[3].split(\":\")[1] === \"3\"))))\n\n  if (!answer) {\n    answer = data.find(\n      (game) =>\n        game[2] === \"yugoslavia\" && \n        ((game[4] === \"1982 wcq\" ? game[5] === \"win\" : \n         ((game[5] === 'loss' && game[3].split(\":\")[0] === \"7\") || \n          (game[5] === 'draw' && game[3].split(\":\")[0] === \"7\")))) &&\n        (game[4] === \"1982 wcq\" ? game[5] === \"loss\" : \n         ((game[5] === 'win' && game[3].split(\":\")[1] === \"3\") || \n          (game[5] === 'draw' && game[3].split(\":\")[1] === \"3\"))))\n\n  if (!answer) {\n    answer = data.find(\n      (game) =>\n        game[2] === \"yugoslavia\" && \n        ((game[4] === \"1982 wcq\" ? game[5] === \"loss\" : \n         ((game[5] === 'win' && game[3].split(\":\")[0] === \"7\") || \n          (game[5] === 'draw' && game[3].split(\":\")[0] === \"7\")))) &&\n        ((game[4] === \"1982 wcq\" ? game[5] === \"loss\" : \n         ((game[5] === 'win' && game[3].split(\":\")[1] === \"3\") || \n          (game[5] === 'draw' && game[3].split(\":\")[1] === \"3\"))))\n\n  if (!answer) {\n    answer = data.find(\n      (game) =>\n        game[2] === \"yugoslavia\" &&\n        ((game[4] === \"1982 wcq\" ? game[5] === \"win\" : \n         ((game[5] === 'loss' && game[3].split(\":\")[0] === \"7\") || \n          (game[5] === 'draw' && game[3].split(\":\")[0] === \"7\")))) &&\n        !((game[4] === \"1982 wcq\" ? game[5] === \"loss\" : \n       ((game[5] === 'win' && game[3].split(\":\")[1] === \"3\") || \n        (game[5] === 'draw' && game[3].split(\":\")[1] === \"3\"))))\n\n    if (!answer) {\n      answer = data.find(\n        (game) =>\n          game[2] === \"yugoslavia\" &&\n          ((game[4] === \"1982 wcq\" ? game[5] === \"loss\" : \n           ((game[5] === 'win' && game[3].split(\":\")[0] === \"7\") || \n            (game[5] === 'draw' && game[3].split(\":\")[0] === \"7\")))) &&\n          ((game[4] === \"1982 wcq\" ? game[5] === \"loss\" : \n           ((game[5] === 'win' && game[3].split(\":\")[1] === \"3\") || \n            (game[5] === 'draw' && game[3].split(\":\")[1] === \"3\"))))\n\n      if (!answer) {\n        answer = data.find(\n          (game) =>\n            game[2] === \"yugoslavia\" &&\n            ((game[4] === \"1982 wcq\" ? game[5] === \"loss\" : \n             ((game[5] === 'win' && game[3].split(\":\")[0] === \"7\") || \n              (game[5] === 'draw' && game[3].split(\":\")[0] === \"7\")))) &&\n            !((game[4] === \"1982 wcq\" ? game[5] === \"loss\" : \n           ((game[5] === 'win' && game[3].split(\":\")[1] === \"3\") || \n            (game[5] === 'draw' && game[3].split(\":\")[1] === \"3\"))))\n\n        if (!answer) {\n          answer = data.find(\n            (game) =>\n              game[2] === \"yugoslavia\" &&\n              ((game[4] === \"1982 wcq\" ? game[5] === \"loss\" : \n               ((game[5] === 'win' && game[3].split(\":\")[0] === \"7\") || \n                (game[5] === 'draw' && game[3].split(\":\")[0] === \"7\")))) &&\n              !((game[4] === \"1982 wcq\" ? game[5] === \"loss\" : \n             ((game[5] === 'win' && game[3].split(\":\")[1] === \"3\") || \n              (game[5] === 'draw' && game[3].split(\":\")[1] === \"3\"))))\n\n          if (!answer) {\n            answer = data.find(\n              (game) =>\n                game[2] === \"yugoslavia\" &&\n                ((game[4] === \"1982 wcq\" ? game[5] === \"loss\" : \n                 ((game[5] === 'win' && game[3].split(\":\")[0] === \"7\") || \n                  (game[5] === 'draw' && game[3].split(\":\")[0] === \"7\")))) &&\n                !((game[4] === \"1982 wcq\" ? game[5] === \"loss\" : \n               ((game[5] === 'win' && game[3].split(\":\")[1] === \"3\") || \n                (game[5] === 'draw' && game[3].split(\":\")[1] === \"3\"))))\n\n            if (!answer) {\n              const relevantCells = data.map((game, index) => {\n                return {\n                  row_index: index,\n                  column_name: game[0],\n                };\n              });\n\n              answer = \"FALSE\";\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return { \n    answer: answer.toUpperCase(),\n    relevant_cells: relevantCells\n  }\n}\n\nconst data = {\n  columns: [\"date\", \"city\", \"country\", \"points\"],\n  rows: [\n    [\"2024-02-15\", \"Barcelona\", \"Spain\", \"12\"],\n    [\"2023-02-13\", \"Paris\", \"France\", \"11\"],\n    [\"2022-10-07\", \"London\", \"England\", \"8\"],\n    [\"2020-09-08\", \"Rome\", \"Italy\", \"6\"],\n  ],\n};\n\nconst result = answerFromData(data);\nconsole.log(result);",
    "true_response": 0,
    "relevant_cells": []
  },
  {
    "table_id": "2-14305653-58.html.csv",
    "claim": "the yugoslavian national team suffer its worst outcome lose 2:1 in the balken cup against poland on march 22",
    "predicted_response": 0,
    "resp": "{\"answer\": \"FALSE\", \"relevant_cells\": [{\"row_index\": 2, \"column_name\": \"results\"}, {\"row_index\": 4, \"column_name\": \"type of game\"}]}",
    "true_response": 0,
    "relevant_cells": [
      {
        "row_index": 2,
        "column_name": "results"
      },
      {
        "row_index": 4,
        "column_name": "type of game"
      }
    ]
  },
  {
    "table_id": "2-14305653-58.html.csv",
    "claim": "the yugoslavian national team win both of its friendly match by a score 0:2",
    "predicted_response": 0,
    "resp": "{\"answer\": \"FALSE\", \"relevant_cells\": [{\"row_index\": 2, \"column_name\": \"results\"}, {\"row_index\": 4, \"column_name\": \"results\"}]}",
    "true_response": 0,
    "relevant_cells": [
      {
        "row_index": 2,
        "column_name": "results"
      },
      {
        "row_index": 4,
        "column_name": "results"
      }
    ]
  },
  {
    "table_id": "2-14305653-58.html.csv",
    "claim": "the yugoslavian national team lose the italy against romania with a aggregate score of 3:4",
    "predicted_response": 0,
    "resp": "var relevantCells = [];\nfor (let row = 0; row < tableData.length; row++) {\n    for (const column of tableData[row].map(cell => cell.name)) {\n        if (column.includes('italy') && tableData[row][3].includes(\"2\") && tableData[row][1] === \"romania\") {\n            relevantCells.push({ row_index: row, column_name: column });\n        }\n    }\n}\n\nvar result = {\n  answer: tableData.some(row => {\n    return (\n      row[1] === \"italy\" &&\n      row[3].includes(\"2\") &&\n      row[4].includes(\"italy\") &&\n      row[0].includes('november') &&\n      row[3].includes(\"0\")\n    );\n  }) ? \"TRUE\" : \"FALSE\",\n  relevantCells\n};",
    "true_response": 0,
    "relevant_cells": []
  },
  {
    "table_id": "2-14305653-58.html.csv",
    "claim": "the yugoslavian national team fail to score only 1 time , drop a world cup qualify match 2:1 against denmark",
    "predicted_response": 0,
    "resp": "{\"answer\": \"FALSE\", \"relevant_cells\": [{\"row_index\": 4, \"column_name\": \"results\"}, {\"row_index\": 5, \"column_name\": \"results\"}, {\"row_index\": 6, \"column_name\": \"results\"}]}",
    "true_response": 0,
    "relevant_cells": [
      {
        "row_index": 4,
        "column_name": "results"
      },
      {
        "row_index": 5,
        "column_name": "results"
      },
      {
        "row_index": 6,
        "column_name": "results"
      }
    ]
  },
  {
    "table_id": "2-14305653-58.html.csv",
    "claim": "the yugoslavian national team lose the balkan cup against romania with a aggregate score of 3:4",
    "predicted_response": 0,
    "resp": "{\n  \"answer\": \"FALSE\",\n  \"relevant_cells\": [\n    {\"row_index\": 2, \"column_name\": \"results\"},\n    {\"row_index\": 3, \"column_name\": \"results\"}\n  ]\n}",
    "true_response": 1,
    "relevant_cells": [
      {
        "row_index": 2,
        "column_name": "results"
      },
      {
        "row_index": 3,
        "column_name": "results"
      }
    ]
  },
  {
    "table_id": "2-14305653-58.html.csv",
    "claim": "the yugoslavian national team suffer its worst outcome lose 1:4 in the balkan cup against romania on august 27",
    "predicted_response": 0,
    "resp": "{\"answer\": \"FALSE\", \"relevant_cells\": []}",
    "true_response": 1,
    "relevant_cells": []
  }
]