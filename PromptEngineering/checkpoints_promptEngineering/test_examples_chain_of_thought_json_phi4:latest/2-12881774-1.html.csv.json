[
  {
    "table_id": "2-12881774-1.html.csv",
    "claim": "jean - luc bouvier serve as a frogman",
    "predicted_response": 1,
    "resp": "To determine whether the claim \"Jean - Luc Bouvier serves as a frogman\" is true or false, we need to carefully examine the table for the relevant data.\n\n### Reasoning Steps:\n\n1. **Identify the Relevant Column**:\n   - The column that indicates the function (role) of each individual in the dataset is labeled \"function (figure)\".\n\n2. **Locate the Real Name \"Jean - Luc Bouvier\"**:\n   - We need to find the row where the real name matches \"jean - luc bouvier\". Since JSON data keys are case-sensitive, ensure matching with exact casing provided: \"jean - luc bouvier\".\n\n3. **Check the Function (Figure) for this Individual**:\n   - Once we locate the correct row for Jean - Luc Bouvier, check what is listed under the \"function (figure)\" column to see if it matches \"frogman\".\n\n### Detailed Examination:\n\n- Scan through each entry in the \"data\" array of the JSON object to find a match for \"jean - luc bouvier\".\n- The relevant entry is:\n  ```json\n  [\n    \"barracuda\",\n    \"frogman\",\n    \"jean - luc bouvier\",\n    \"marseilles\",\n    \"af 342102\",\n    \"underwater assault\",\n    \"sabotage\"\n  ]\n  ```\n  This indicates that Jean - Luc Bouvier's function (figure) is indeed listed as \"frogman\".\n\n### Conclusion:\n\n- The claim \"Jean - Luc Bouvier serves as a frogman\" matches the data in the table.\n- Therefore, the claim is TRUE.\n\n### Final JSON Output:\n\n```json\n{\n  \"chain_of_thought\": [\n    \"Identify the column for function (figure) which indicates roles.\",\n    \"Locate the row where the real name is 'jean - luc bouvier'.\",\n    \"Verify that in this row, the function (figure) matches 'frogman'.\",\n    \"The data confirms Jean - Luc Bouvier's role as a frogman.\"\n  ],\n  \"answer\": \"TRUE\",\n  \"relevant_cells\": [\n    {\"row_index\": 2, \"column_name\": \"real name\", \"value\": \"jean - luc bouvier\"},\n    {\"row_index\": 2, \"column_name\": \"function (figure)\", \"value\": \"frogman\"}\n  ]\n}\n```",
    "true_response": 1,
    "relevant_cells": []
  },
  {
    "table_id": "2-12881774-1.html.csv",
    "claim": "pete sanderson be bear in oklahoma",
    "predicted_response": 0,
    "resp": "To determine whether the claim \"pete sanderson be bear in oklahoma\" is true or false, we need to analyze the provided table data step by step:\n\n1. **Identify Relevant Information**: The claim contains specific elements: a person's name (\"pete sanderson\"), an action word (\"be\"), and two attributes (\"bear\" and \"in oklahoma\"). We focus on identifying \"pete sanderson\" in the table.\n\n2. **Locate the Row for Pete Sanderson**:\n   - Examine each row to find where \"Pete Sanderson\" appears as the real name.\n   - In the table, we find that \"pete sanderson\" is listed under the column \"real name\".\n\n3. **Check Birthplace**:\n   - Once we locate \"Pete Sanderson\", check his birthplace in the corresponding row.\n   - The entry for Pete Sanderson shows \"oklahoma\" as his birthplace.\n\n4. **Interpret the Claim's Meaning**:\n   - The claim uses the phrase \"be bear\". Interpreting this literally, it suggests a transformation or identity change from \"Pete Sanderson\" to \"bear\".\n   - However, there is no information in the table about anyone transforming into an animal or being a bear. The table only provides factual military-related data.\n\n5. **Evaluate the Claim**:\n   - Since there is no column or data indicating that Pete Sanderson is a bear or has any connection to bears, the claim \"pete sanderson be bear\" does not hold true.\n   - The part of the claim regarding his birthplace (\"in oklahoma\") is accurate.\n\n6. **Conclusion**:\n   - The claim is false because while it correctly states that Pete Sanderson is from Oklahoma, there is no evidence or data to support him being a bear.\n\nHere is the final answer in JSON format:\n\n```json\n{\n  \"chain_of_thought\": [\n    \"Locate 'Pete Sanderson' in the table under the column 'real name'.\",\n    \"Find that Pete Sanderson's birthplace is listed as 'oklahoma'.\",\n    \"Interpret the claim 'be bear' to mean an identity change, which is not supported by the table data.\",\n    \"Conclude that while the birthplace part of the claim is true, there is no evidence for him being a bear.\"\n  ],\n  \"answer\": \"FALSE\",\n  \"relevant_cells\": [\n    {\n      \"row_index\": 3,\n      \"column_name\": \"real name\"\n    },\n    {\n      \"row_index\": 3,\n      \"column_name\": \"birthplace\"\n    }\n  ]\n}\n```",
    "true_response": 1,
    "relevant_cells": [
      {
        "row_index": 3,
        "column_name": "real name"
      },
      {
        "row_index": 3,
        "column_name": "birthplace"
      }
    ]
  },
  {
    "table_id": "2-12881774-1.html.csv",
    "claim": "the real name of sparrowhawk , the shock paratrooper , be peter van der berg",
    "predicted_response": 1,
    "resp": "To determine the truthfulness of the claim, let's follow a step-by-step process:\n\n### Step 1: Identify Relevant Information from the Table\nThe claim states, \"the real name of sparrowhawk, the shock paratrooper, be peter van der berg.\" This involves checking three specific pieces of information:\n- The \"code name\" should be \"sparrowhawk.\"\n- The \"function (figure)\" should be \"para attack trooper,\" which aligns with being a \"shock paratrooper.\"\n- The \"real name\" should be \"peter van der berg.\"\n\n### Step 2: Locate the Relevant Row in the Table\nWe need to find the row in the table where:\n- The \"code name\" is \"sparrowhawk.\"\n- The \"function (figure)\" is \"para attack trooper,\" which matches the claim's reference to a \"shock paratrooper.\"\n\n### Step 3: Verify Each Piece of Information\n\n1. **Find the Row with Code Name \"sparrowhawk\":**\n   - Scan through each row in the \"data\" array.\n   - Locate the entry where `code name` is \"sparrowhawk.\"\n\n2. **Check Function (Figure):**\n   - Confirm that for this row, `function (figure)` matches \"para attack trooper.\"\n   - Note: The claim mentions a \"shock paratrooper,\" which is consistent with a para attack trooper role.\n\n3. **Verify Real Name:**\n   - Check if the `real name` in this row is \"peter van der berg.\"\n\n### Step 4: Extract and Confirm Relevant Data\n- From the table, locate:\n  - Row where `code name` is \"sparrowhawk.\"\n  - Verify that `function (figure)` is \"para attack trooper.\"\n  - Check if `real name` is indeed \"peter van der berg.\"\n\n### Step 5: Conclude Based on Verification\n- If all the conditions match, then the claim is TRUE.\n- Otherwise, it is FALSE.\n\n### Applying Steps to the Table\n\n1. **Locate Code Name and Function:**\n   - The row with `code name` \"sparrowhawk\" has:\n     - `function (figure)`: \"para attack trooper\"\n     - `real name`: \"peter van der berg\"\n\n2. **Verification:**\n   - The function \"para attack trooper\" aligns with the role of a \"shock paratrooper.\"\n   - The real name matches exactly as claimed.\n\n### Final Answer\n\nBased on the verification steps above, all conditions match perfectly with the data provided in the table.\n\n```json\n{\n  \"chain_of_thought\": [\n    \"Identify the row where 'code name' is 'sparrowhawk'.\",\n    \"Verify that 'function (figure)' for this row is 'para attack trooper', which aligns with being a 'shock paratrooper'.\",\n    \"Check if 'real name' in this row is 'peter van der berg'.\",\n    \"All conditions are satisfied, confirming the claim as true.\"\n  ],\n  \"answer\": \"TRUE\",\n  \"relevant_cells\": [\n    {\"row_index\": 9, \"column_name\": \"code name\"},\n    {\"row_index\": 9, \"column_name\": \"function (figure)\"},\n    {\"row_index\": 9, \"column_name\": \"real name\"}\n  ]\n}\n```",
    "true_response": 1,
    "relevant_cells": [
      {
        "row_index": 9,
        "column_name": "code name"
      },
      {
        "row_index": 9,
        "column_name": "function (figure)"
      },
      {
        "row_index": 9,
        "column_name": "real name"
      }
    ]
  },
  {
    "table_id": "2-12881774-1.html.csv",
    "claim": "the pilot of the silent attack kayak be call jacques - peter smith",
    "predicted_response": 1,
    "resp": "To determine whether the claim \"the pilot of the silent attack kayak be call jacques - peter smith\" is true or false, we need to verify the relevant details from the table provided.\n\n### Step-by-step Reasoning:\n\n1. **Identify the Role:**\n   - The claim refers to a role described as \"pilot of the silent attack kayak.\" We will look for this description in the \"function (figure)\" column.\n\n2. **Find the Corresponding Entry:**\n   - In the table, we find an entry with \"silent attack kayak\" under the \"function (figure)\" column.\n   - This corresponds to row index 10.\n\n3. **Verify the Real Name:**\n   - For the same row (row index 10), check the \"real name\" column.\n   - The real name listed is \"jacques - peter smith.\"\n\n4. **Conclusion:**\n   - The claim states that \"the pilot of the silent attack kayak be call jacques - peter smith.\"\n   - According to our verification, this matches exactly with what's in the table.\n\n5. **Final Decision:**\n   - Since all parts of the claim are verified against the data and found to be accurate, the claim is TRUE.\n\n### Relevant Cells:\n- From row index 10:\n  - \"function (figure)\" column: \"silent attack kayak\"\n  - \"real name\" column: \"jacques - peter smith\"\n\n```json\n{\n  \"chain_of_thought\": \"The claim specifies a role and a real name. We identified the 'silent attack kayak' role in the table at row index 10, and verified that the real name associated with this role is 'jacques - peter smith'. This matches the claim exactly.\",\n  \"answer\": \"TRUE\",\n  \"relevant_cells\": [\n    {\"row_index\": 10, \"column_name\": \"function (figure)\"},\n    {\"row_index\": 10, \"column_name\": \"real name\"}\n  ]\n}\n```",
    "true_response": 1,
    "relevant_cells": [
      {
        "row_index": 10,
        "column_name": "function (figure)"
      },
      {
        "row_index": 10,
        "column_name": "real name"
      }
    ]
  },
  {
    "table_id": "2-12881774-1.html.csv",
    "claim": "the person bear in liverpool have the codename stakeout",
    "predicted_response": 1,
    "resp": "To determine whether the claim \"the person bear in liverpool have the codename stakeout\" is true or false, let's break down the steps required to verify it:\n\n### Step-by-Step Reasoning\n\n1. **Identify Relevant Information:**\n   - We need to find any row where the birthplace is \"liverpool.\"\n   - Once identified, check if the code name in that row is \"stakeout.\"\n\n2. **Examine the Table Data:**\n\n   The table consists of columns: \n   - \"code name\"\n   - \"function (figure)\"\n   - \"real name\"\n   - \"birthplace\"\n   - \"serial number\"\n   - \"primary military speciality\"\n   - \"secondary military speciality\"\n\n3. **Locate the Row with Birthplace as Liverpool:**\n\n   Scan through each row to find a match for \"liverpool\" in the \"birthplace\" column.\n   \n   From the table data:\n   - For the entry where `row_index` is 5, the birthplace is \"liverpool.\"\n\n4. **Check the Code Name of This Row:**\n\n   In the same row (where `row_index` is 5):\n   - The code name listed is \"stakeout.\"\n\n### Conclusion\n\nThe person born in Liverpool indeed has the codename \"stakeout,\" which matches the claim.\n\n### Final Output\n\n```json\n{\n  \"chain_of_thought\": \"First, locate the row where the 'birthplace' is 'liverpool.' Found at row_index 5. Then check the 'code name' for this row, which is 'stakeout.' Thus, the claim is TRUE.\",\n  \"answer\": \"TRUE\",\n  \"relevant_cells\": [\n    {\"row_index\": 5, \"column_name\": \"birthplace\", \"value\": \"liverpool\"},\n    {\"row_index\": 5, \"column_name\": \"code name\", \"value\": \"stakeout\"}\n  ]\n}\n```",
    "true_response": 1,
    "relevant_cells": [
      {
        "row_index": 5,
        "column_name": "birthplace",
        "value": "liverpool"
      },
      {
        "row_index": 5,
        "column_name": "code name",
        "value": "stakeout"
      }
    ]
  },
  {
    "table_id": "2-12881774-1.html.csv",
    "claim": "the pilot and the attack trooper have the same birthplace",
    "predicted_response": 0,
    "resp": "To determine whether the claim \"the pilot and the attack trooper have the same birthplace\" is true or false, we need to examine the relevant entries in the provided table:\n\n1. **Identify the rows corresponding to each role:**\n   - We first locate the row for \"attack trooper.\" From the table:\n     - The function (figure) for this entry is \"attack trooper.\"\n     - This corresponds to the first row of data.\n\n   - Next, we identify the row for \"pilot.\" There are two entries related to pilots in the dataset:\n     - \"chopper\" with the role of \"pilot\" and birthplace \"oklahoma.\"\n     - \"blades\" with the role of \"pilot of the hawk helicopter\" and birthplace \"american, mid west.\"\n\n2. **Extract relevant data:**\n   - For the attack trooper (first row):\n     - Birthplace is listed as \"not applicable.\"\n\n   - For the pilot \"chopper\" (fourth row):\n     - Birthplace is \"oklahoma.\"\n\n   - For the pilot \"blades\" (seventh row):\n     - Birthplace is \"american, mid west.\"\n\n3. **Compare birthplaces:**\n   - The attack trooper's birthplace is \"not applicable.\"\n   - The pilots' birthplaces are \"oklahoma\" and \"american, mid west,\" both of which are specified locations.\n   \n4. **Conclusion:**\n   - Since the birthplace for the attack trooper is \"not applicable,\" it cannot be compared to the specific birthplaces of the pilots.\n\nThus, based on this analysis, the claim that \"the pilot and the attack trooper have the same birthplace\" is false because one party does not have a specified birthplace to compare with the other.\n\nHere's the JSON output:\n\n```json\n{\n  \"chain_of_thought\": [\n    \"Identify rows for 'attack trooper' and 'pilot':\",\n    \"- Attack trooper is in row 0.\",\n    \"- Pilots are in rows 3 (chopper) and 6 (blades).\",\n    \"Extract birthplaces:\",\n    \"- Row 0, column 'birthplace': not applicable.\",\n    \"- Row 3, column 'birthplace': oklahoma.\",\n    \"- Row 6, column 'birthplace': american, mid west.\",\n    \"Compare the birthplaces:\",\n    \"- Attack trooper's birthplace is 'not applicable'.\",\n    \"- Both pilots have specific birthplaces.\",\n    \"Conclusion: The claim cannot be true as one party has no specified birthplace.\"\n  ],\n  \"answer\": \"FALSE\",\n  \"relevant_cells\": [\n    {\"row_index\": 0, \"column_name\": \"birthplace\"},\n    {\"row_index\": 3, \"column_name\": \"birthplace\"},\n    {\"row_index\": 6, \"column_name\": \"birthplace\"}\n  ]\n}\n```",
    "true_response": 0,
    "relevant_cells": [
      {
        "row_index": 0,
        "column_name": "birthplace"
      },
      {
        "row_index": 3,
        "column_name": "birthplace"
      },
      {
        "row_index": 6,
        "column_name": "birthplace"
      }
    ]
  },
  {
    "table_id": "2-12881774-1.html.csv",
    "claim": "the real name of the shock trooper be albert roger jones",
    "predicted_response": 1,
    "resp": "To determine whether the claim about the table is TRUE or FALSE, let's go through a step-by-step reasoning process:\n\n1. **Understand the Claim**: The claim states: \"the real name of the shock trooper be albert roger jones.\"\n\n2. **Identify Relevant Information**:\n   - We need to identify what role corresponds to the term \"shock trooper.\"\n   - We then need to verify if Albert Roger Jones is associated with this role.\n\n3. **Locate 'Shock Trooper' in Table**:\n   - Examine each row under the column labeled \"code name\" and \"function (figure)\" to find the entry matching \"shock trooper.\"\n   - From the table, locate:\n     ```json\n     {\n       \"columns\": [\n         \"code name\",\n         \"function (figure)\",\n         \"real name\",\n         \"birthplace\",\n         \"serial number\",\n         \"primary military speciality\",\n         \"secondary military speciality\"\n       ],\n       \"data\": [\n         [\"none\", \"attack trooper\", \"not applicable\", \"not applicable\", \"various\", \"storm and siege\", \"shock attack\"]\n       ]\n     }\n     ```\n   - The role closest to \"shock trooper\" is \"attack trooper,\" which has the secondary military speciality of \"shock attack.\"\n\n4. **Verify Real Name for 'Attack Trooper'**:\n   - For the row where the function (figure) is \"attack trooper,\" check the real name.\n   - The relevant data entry indicates: `\"real name\": \"not applicable\"`.\n   - Therefore, there is no specific real name associated with this role.\n\n5. **Locate Albert Roger Jones in Table**:\n   - Search for \"Albert Roger Jones\" under the column labeled \"real name.\"\n   - From the table:\n     ```json\n     {\n       \"data\": [\n         [\"stakeout\", \"boat patrol commando\", \"albert roger jones\", \"liverpool\", \"af 342100\", \"seaborne assault\", \"small arms\"]\n       ]\n     }\n     ```\n   - Albert Roger Jones is associated with the role of \"boat patrol commando,\" not a \"shock trooper.\"\n\n6. **Conclusion**:\n   - The claim that \"the real name of the shock trooper be albert roger jones\" is FALSE.\n   - No entry for \"shock trooper\" exists, and Albert Roger Jones does not match this role.\n\nBased on these steps, here is the JSON output:\n\n```json\n{\n  \"chain_of_thought\": \"The table does not have a specific 'shock trooper' role; instead, it has an 'attack trooper' with a secondary speciality of 'shock attack.' The real name associated with 'attack trooper' is 'not applicable.' Albert Roger Jones is listed as 'stakeout,' with the function 'boat patrol commando.' Therefore, Albert Roger Jones cannot be the shock trooper.\",\n  \"answer\": \"FALSE\",\n  \"relevant_cells\": [\n    {\"row_index\": 0, \"column_name\": \"function (figure)\"},\n    {\"row_index\": 0, \"column_name\": \"real name\"},\n    {\"row_index\": 5, \"column_name\": \"code name\"},\n    {\"row_index\": 5, \"column_name\": \"function (figure)\"},\n    {\"row_index\": 5, \"column_name\": \"real name\"}\n  ]\n}\n```",
    "true_response": 0,
    "relevant_cells": []
  },
  {
    "table_id": "2-12881774-1.html.csv",
    "claim": "the baracuder specialize in night attack more than the beaver",
    "predicted_response": 1,
    "resp": "To determine whether the claim \"the barracuda specializes in night attack more than the beaver\" is true or false, we need to analyze the relevant data from the table.\n\n### Step-by-Step Reasoning:\n\n1. **Identify Relevant Rows:**\n   - We first find the rows corresponding to \"barracuda\" and \"beaver.\"\n\n2. **Locate Barracuda's Data:**\n   - From the table, the row for \"barracuda\" is:\n     ```json\n     [\n       \"barracuda\",\n       \"frogman\",\n       \"jean - luc bouvier\",\n       \"marseilles\",\n       \"af 342102\",\n       \"underwater assault\",\n       \"sabotage\"\n     ]\n     ```\n   - **Primary Speciality:** \"underwater assault\"\n   - **Secondary Speciality:** \"sabotage\"\n\n3. **Locate Beaver's Data:**\n   - From the table, the row for \"beaver\" is:\n     ```json\n     [\n       \"beaver\",\n       \"pilot of the silent attack kayak\",\n       \"jacques - peter smith\",\n       \"ontario\",\n       \"af 342746\",\n       \"waterborne sabotage\",\n       \"night attack\"\n     ]\n     ```\n   - **Primary Speciality:** \"waterborne sabotage\"\n   - **Secondary Speciality:** \"night attack\"\n\n4. **Compare Specialities:**\n   - The claim is about specialization in \"night attack.\"\n   - Barracuda does not list \"night attack\" as either primary or secondary speciality.\n   - Beaver lists \"night attack\" as a secondary speciality.\n\n5. **Conclusion:**\n   - Since barracuda has no mention of \"night attack,\" and beaver does, the claim that \"barracuda specializes in night attack more than the beaver\" is false.\n\n### Relevant Cells:\n- **Barracuda's Specialities:** \n  - Primary: Underwater assault\n  - Secondary: Sabotage\n\n- **Beaver's Specialities:**\n  - Primary: Waterborne sabotage\n  - Secondary: Night attack\n\n### Final Answer:\n\n```json\n{\n  \"chain_of_thought\": \"First, identify the rows for 'barracuda' and 'beaver.' Barracuda has primary speciality as 'underwater assault' and secondary as 'sabotage,' neither of which is 'night attack.' Beaver has primary speciality as 'waterborne sabotage' and secondary as 'night attack.' Since barracuda does not have 'night attack' listed, whereas beaver does, the claim that barracuda specializes in night attack more than beaver is false.\",\n  \"answer\": \"FALSE\",\n  \"relevant_cells\": [\n    {\"row_index\": 2, \"column_name\": \"primary military speciality\"},\n    {\"row_index\": 2, \"column_name\": \"secondary military speciality\"},\n    {\"row_index\": 10, \"column_name\": \"primary military speciality\"},\n    {\"row_index\": 10, \"column_name\": \"secondary military speciality\"}\n  ]\n}\n```",
    "true_response": 0,
    "relevant_cells": []
  },
  {
    "table_id": "2-12881774-1.html.csv",
    "claim": "the commando and the boat patrol commando have the codename stakeout",
    "predicted_response": 0,
    "resp": "To determine if the claim \"the commando and the boat patrol commando have the codename stakeout\" is true or false, we need to verify two things from the table:\n\n1. **Identify the row corresponding to the \"commando\" function**:\n   - Locate the entry in the data where the column \"function (figure)\" has the value \"commando\".\n   - Check if this row's \"code name\" is \"stakeout\".\n\n2. **Identify the row corresponding to the \"boat patrol commando\" function**:\n   - Locate the entry in the data where the column \"function (figure)\" has the value \"boat patrol commando\".\n   - Check if this row's \"code name\" is \"stakeout\".\n\nLet's go through these steps:\n\n### Step-by-Step Reasoning\n\n1. **Find the Commando Function**:\n   - In the table, look for a row where \"function (figure)\" is \"commando\".\n   - From the data:\n     - Row 2 has \"function (figure)\": \"commando\" and \"code name\": \"quickfire\".\n\n2. **Verify Code Name for Commando**:\n   - The code name for the entry with \"function (figure)\" as \"commando\" is \"quickfire\", not \"stakeout\".\n\n3. **Find the Boat Patrol Commando Function**:\n   - In the table, look for a row where \"function (figure)\" is \"boat patrol commando\".\n   - From the data:\n     - Row 6 has \"function (figure)\": \"boat patrol commando\" and \"code name\": \"stakeout\".\n\n4. **Verify Code Name for Boat Patrol Commando**:\n   - The code name for the entry with \"function (figure)\" as \"boat patrol commando\" is indeed \"stakeout\".\n\n### Conclusion\n\n- The claim that both \"the commando and the boat patrol commando have the codename stakeout\" is false because only the \"boat patrol commando\" has the codename \"stakeout\". The \"commando\" does not.\n\n### Relevant Cells\n- For \"commando\": Row 2, Column \"function (figure)\" = \"commando\", Column \"code name\" = \"quickfire\".\n- For \"boat patrol commando\": Row 6, Column \"function (figure)\" = \"boat patrol commando\", Column \"code name\" = \"stakeout\".\n\n```json\n{\n  \"chain_of_thought\": \"First, I identified the row where 'function (figure)' is 'commando', which corresponds to Row 2 with code name 'quickfire'. Second, I found the row where 'function (figure)' is 'boat patrol commando', corresponding to Row 6 with code name 'stakeout'. Since only the boat patrol commando has the codename 'stakeout' and not the commando, the claim is false.\",\n  \"answer\": \"FALSE\",\n  \"relevant_cells\": [\n    {\"row_index\": 1, \"column_name\": \"function (figure)\", \"value\": \"commando\"},\n    {\"row_index\": 1, \"column_name\": \"code name\", \"value\": \"quickfire\"},\n    {\"row_index\": 5, \"column_name\": \"function (figure)\", \"value\": \"boat patrol commando\"},\n    {\"row_index\": 5, \"column_name\": \"code name\", \"value\": \"stakeout\"}\n  ]\n}\n```",
    "true_response": 0,
    "relevant_cells": [
      {
        "row_index": 1,
        "column_name": "function (figure)",
        "value": "commando"
      },
      {
        "row_index": 1,
        "column_name": "code name",
        "value": "quickfire"
      },
      {
        "row_index": 5,
        "column_name": "function (figure)",
        "value": "boat patrol commando"
      },
      {
        "row_index": 5,
        "column_name": "code name",
        "value": "stakeout"
      }
    ]
  }
]