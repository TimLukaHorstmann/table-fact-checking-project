[
  {
    "table_id": "1-28132970-5.html.csv",
    "claim": "5 of the 7 vessel be build in the year 2010",
    "predicted_response": 1,
    "resp": "To determine whether the claim \"5 of the 7 vessel be build in the year 2010\" is true or false, we need to analyze the data provided in the table focusing on two aspects:\n\n1. **Number of vessels**: Verify that there are indeed 7 vessels listed.\n2. **Year built**: Check how many of these vessels were built in the year 2010.\n\nLet's break it down step by step:\n\n### Step 1: Count Total Number of Vessels\n\nFrom the data provided, we have a list of 7 entries under the \"vessel\" column:\n\n1. gallion\n2. gardian 1\n3. gardian 2\n4. gardian 7\n5. gardian 9\n6. marianarray\n7. smeaton array\n\nThis confirms that there are indeed 7 vessels.\n\n### Step 2: Check the Year Built for Each Vessel\n\nWe need to look at the \"built\" column to see how many of these vessels were built in 2010:\n\n- gallion: built in 2010\n- gardian 1: built in 2010\n- gardian 2: built in 2010\n- gardian 7: built in 2010\n- gardian 9: built in 2010\n- marianarray: built in 2011\n- smeaton array: built in 2011\n\nFrom this, we see that:\n\n- 5 vessels (gallion, gardian 1, gardian 2, gardian 7, and gardian 9) were built in 2010.\n- 2 vessels (marianarray and smeaton array) were built in 2011.\n\n### Conclusion\n\nThe claim states that \"5 of the 7 vessel be build in the year 2010.\" Based on our analysis:\n\n- There are indeed 7 vessels listed.\n- Exactly 5 of these vessels were built in the year 2010.\n\nThus, the claim is supported by the data provided in the table. \n\n### Relevant Cells\n\nThe relevant cells that confirm this claim are those under the \"built\" column for each row index where the value is \"2010\". These indices and their columns are:\n\n- Row 0 (gallion), Column \"built\"\n- Row 1 (gardian 1), Column \"built\"\n- Row 2 (gardian 2), Column \"built\"\n- Row 3 (gardian 7), Column \"built\"\n- Row 4 (gardian 9), Column \"built\"\n\nThese cells confirm that 5 vessels were built in the year 2010.\n\n```json\n{\n  \"answer\": \"TRUE\",\n  \"relevant_cells\": [\n    {\"row_index\": 0, \"column_name\": \"built\"},\n    {\"row_index\": 1, \"column_name\": \"built\"},\n    {\"row_index\": 2, \"column_name\": \"built\"},\n    {\"row_index\": 3, \"column_name\": \"built\"},\n    {\"row_index\": 4, \"column_name\": \"built\"}\n  ]\n}\n```",
    "true_response": 1,
    "relevant_cells": [
      {
        "row_index": 0,
        "column_name": "built"
      },
      {
        "row_index": 1,
        "column_name": "built"
      },
      {
        "row_index": 2,
        "column_name": "built"
      },
      {
        "row_index": 3,
        "column_name": "built"
      },
      {
        "row_index": 4,
        "column_name": "built"
      }
    ]
  },
  {
    "table_id": "1-28132970-5.html.csv",
    "claim": "marianarray and smeaton array have a breadth of 6 m",
    "predicted_response": 1,
    "resp": "To determine whether the claim \"marianarray and smeaton array have a breadth of 6 m\" is true or false based on the provided table, we need to examine the relevant data points in the table.\n\n### Steps to Verify the Claim:\n\n1. **Identify Relevant Vessels**:\n   - The vessels mentioned in the claim are \"marianarray\" and \"smeaton array\".\n\n2. **Locate Rows for Each Vessel**:\n   - Find the row where the vessel is \"marianarray\".\n   - Find the row where the vessel is \"smeaton array\".\n\n3. **Check the Breadth Column**:\n   - For each of these rows, check the value in the \"breadth\" column to see if it matches \"6 m\".\n\n4. **Verify Conditions**:\n   - The claim states that both vessels must have a breadth of \"6 m\". Therefore, both conditions need to be satisfied for the claim to be true.\n\n### Analysis:\n\n- **Row for \"marianarray\"**:\n  - Row Index: 5\n  - Breadth: \"6 m\"\n\n- **Row for \"smeaton array\"**:\n  - Row Index: 6\n  - Breadth: \"6 m\"\n\nBoth vessels have a breadth of \"6 m\", which matches the claim.\n\n### Conclusion:\n\nSince both conditions are satisfied, the claim is true.\n\nHere's the JSON response with relevant cells:\n\n```json\n{\n  \"answer\": \"TRUE\",\n  \"relevant_cells\": [\n    {\"row_index\": 5, \"column_name\": \"breadth\"},\n    {\"row_index\": 6, \"column_name\": \"breadth\"}\n  ]\n}\n```",
    "true_response": 1,
    "relevant_cells": [
      {
        "row_index": 5,
        "column_name": "breadth"
      },
      {
        "row_index": 6,
        "column_name": "breadth"
      }
    ]
  },
  {
    "table_id": "1-28132970-5.html.csv",
    "claim": "smeaton array be the only ovessel with controllable pitch propeller",
    "predicted_response": 1,
    "resp": "To determine the truth of the claim \"smeaton array be the only vessel with controllable pitch propeller,\" we need to examine the relevant column in the table for each row. The specific column we're interested in is \"propulsion.\"\n\nHere are the steps and findings:\n\n1. **Identify the Relevant Column**: We need to check the \"propulsion\" column to see if any other vessels use a \"controllable pitch propeller.\"\n\n2. **Examine Each Row**:\n   - **Row 0 (\"gallion\")**: Propulsion is \"prop\".\n   - **Row 1 (\"gardian 1\")**: Propulsion is \"prop\".\n   - **Row 2 (\"gardian 2\")**: Propulsion is \"prop\".\n   - **Row 3 (\"gardian 7\")**: Propulsion is \"prop\".\n   - **Row 4 (\"gardian 9\")**: Propulsion is \"prop\".\n   - **Row 5 (\"marianarray\")**: Propulsion is \"jet\".\n   - **Row 6 (\"smeaton array\")**: Propulsion is \"controllable pitch propeller\".\n\n3. **Evaluate the Claim**:\n   - The claim states that \"smeaton array\" should be the only vessel with a \"controllable pitch propeller.\"\n   - After examining all rows, we find that \"smeaton array\" in row 6 is indeed the only entry with \"controllable pitch propeller.\"\n\n4. **Conclusion**: Since no other vessels are listed with a \"controllable pitch propeller,\" the claim is true.\n\n5. **Identify Relevant Cells**:\n   - The relevant cell for verifying this claim is found at row index 6, column name \"propulsion\".\n\nThus, we can conclude that the answer to the claim is TRUE, and the relevant cell for verification is specified as follows:\n\n```json\n{\n  \"answer\": \"TRUE\",\n  \"relevant_cells\": [\n    {\"row_index\": 6, \"column_name\": \"propulsion\"}\n  ]\n}\n```",
    "true_response": 1,
    "relevant_cells": [
      {
        "row_index": 6,
        "column_name": "propulsion"
      }
    ]
  },
  {
    "table_id": "1-28132970-5.html.csv",
    "claim": "the length of all the vessel , except 1 , be 20 m",
    "predicted_response": 1,
    "resp": "To determine whether the claim is true or false, we need to check if all vessels except one have a length of \"20 m\". The claim states: \"the length of all the vessel, except 1, be 20 m.\" This implies that only one vessel should not have a length of \"20 m\".\n\nLet's examine the data:\n\n1. **Gallion**: Length = \"20 m\"\n2. **Guardian 1**: Length = \"20 m\"\n3. **Guardian 2**: Length = \"20 m\"\n4. **Guardian 7**: Length = \"20 m\"\n5. **Guardian 9**: Length = \"20 m\"\n6. **Marianarray**: Length = \"17 m\" (This is different from \"20 m\")\n7. **Smeaton Array**: Length = \"20 m\"\n\nFrom the data, six vessels have a length of \"20 m\", and one vessel (\"Marianarray\") has a length of \"17 m\". This matches the claim that all but one vessel should have a length of \"20 m\".\n\nNow, let's identify the relevant cells:\n\n- For each vessel with a length of \"20 m\":\n  - Row indices: 0, 1, 2, 3, 4, 6\n  - Column name: \"length\"\n\n- For the vessel with a different length:\n  - Row index: 5\n  - Column name: \"length\"\n\nThe relevant cells are:\n\n```json\n{\n  \"answer\": \"TRUE\",\n  \"relevant_cells\": [\n    {\"row_index\": 0, \"column_name\": \"length\"},\n    {\"row_index\": 1, \"column_name\": \"length\"},\n    {\"row_index\": 2, \"column_name\": \"length\"},\n    {\"row_index\": 3, \"column_name\": \"length\"},\n    {\"row_index\": 4, \"column_name\": \"length\"},\n    {\"row_index\": 5, \"column_name\": \"length\"},\n    {\"row_index\": 6, \"column_name\": \"length\"}\n  ]\n}\n```",
    "true_response": 1,
    "relevant_cells": [
      {
        "row_index": 0,
        "column_name": "length"
      },
      {
        "row_index": 1,
        "column_name": "length"
      },
      {
        "row_index": 2,
        "column_name": "length"
      },
      {
        "row_index": 3,
        "column_name": "length"
      },
      {
        "row_index": 4,
        "column_name": "length"
      },
      {
        "row_index": 5,
        "column_name": "length"
      },
      {
        "row_index": 6,
        "column_name": "length"
      }
    ]
  },
  {
    "table_id": "1-28132970-5.html.csv",
    "claim": "the vessel marianarray have tje lowest maximum speed of 26 knot",
    "predicted_response": 1,
    "resp": "To determine whether the claim is true or false, we need to verify if the vessel \"marianarray\" has the lowest maximum speed of 26 knots among all vessels listed in the table.\n\n### Steps:\n\n1. **Identify Relevant Data:**\n   - Extract the relevant data for each vessel, specifically focusing on the \"max speed\" column.\n   \n2. **Convert Speeds to a Comparable Format:**\n   - Convert speeds from strings (e.g., \"30 knots\") to numerical values for comparison. Here, all speeds are given in knots and can be directly compared as integers.\n\n3. **Extract Maximum Speed Values:**\n   - For each vessel, extract the maximum speed value:\n     - \"gallion\": 30 knots\n     - \"gardian 1\": 30 knots\n     - \"gardian 2\": 30 knots\n     - \"gardian 7\": 30 knots\n     - \"gardian 9\": 30 knots\n     - \"marianarray\": 26 knots\n     - \"smeaton array\": 30 knots\n\n4. **Determine the Lowest Speed:**\n   - Compare all extracted speed values to find the lowest:\n     - The speeds are 30, 30, 30, 30, 30, 26, and 30.\n     - The lowest speed is 26 knots.\n\n5. **Verify the Claim:**\n   - Check if \"marianarray\" has this lowest speed of 26 knots.\n   - Yes, \"marianarray\" indeed has a maximum speed of 26 knots.\n\n6. **Conclusion:**\n   - Since \"marianarray\" has the lowest maximum speed among all vessels listed, the claim is true.\n\n### Relevant Cells:\n\n- The relevant cells for verifying this claim are those containing the maximum speeds of all vessels:\n  - Row indices for max speed column: 0, 1, 2, 3, 4, 5, and 6.\n  \n### JSON Output:\n\n```json\n{\n  \"answer\": \"TRUE\",\n  \"relevant_cells\": [\n    {\"row_index\": 0, \"column_name\": \"max speed\"},\n    {\"row_index\": 1, \"column_name\": \"max speed\"},\n    {\"row_index\": 2, \"column_name\": \"max speed\"},\n    {\"row_index\": 3, \"column_name\": \"max speed\"},\n    {\"row_index\": 4, \"column_name\": \"max speed\"},\n    {\"row_index\": 5, \"column_name\": \"max speed\"},\n    {\"row_index\": 6, \"column_name\": \"max speed\"}\n  ]\n}\n```",
    "true_response": 1,
    "relevant_cells": [
      {
        "row_index": 0,
        "column_name": "max speed"
      },
      {
        "row_index": 1,
        "column_name": "max speed"
      },
      {
        "row_index": 2,
        "column_name": "max speed"
      },
      {
        "row_index": 3,
        "column_name": "max speed"
      },
      {
        "row_index": 4,
        "column_name": "max speed"
      },
      {
        "row_index": 5,
        "column_name": "max speed"
      },
      {
        "row_index": 6,
        "column_name": "max speed"
      }
    ]
  },
  {
    "table_id": "1-28132970-5.html.csv",
    "claim": "6 of the 7 vessel be build in the year 2010",
    "predicted_response": 0,
    "resp": "To determine whether the claim \"6 of the 7 vessels were built in the year 2010\" is true or false, we need to examine each vessel's construction year in the provided table and count how many of them were built in 2010.\n\n### Step-by-Step Analysis:\n\n1. **Identify Relevant Column:**\n   - The relevant column for verifying the claim is \"built\", as it indicates the year each vessel was constructed.\n\n2. **Examine Each Row:**\n   - For each row, check the value under the \"built\" column to see if it corresponds to 2010.\n   \n3. **Count Vessels Built in 2010:**\n   - Count how many vessels have their construction year listed as 2010.\n\n4. **Compare with Claim:**\n   - The claim states that 6 out of 7 vessels were built in 2010. Verify if our count matches this statement.\n\n### Detailed Examination:\n\n- **Row 0:** \n  - Vessel: \"gallion\"\n  - Built: 2010\n  - This row supports the claim.\n\n- **Row 1:** \n  - Vessel: \"gardian 1\"\n  - Built: 2010\n  - This row supports the claim.\n\n- **Row 2:** \n  - Vessel: \"gardian 2\"\n  - Built: 2010\n  - This row supports the claim.\n\n- **Row 3:** \n  - Vessel: \"gardian 7\"\n  - Built: 2010\n  - This row supports the claim.\n\n- **Row 4:** \n  - Vessel: \"gardian 9\"\n  - Built: 2010\n  - This row supports the claim.\n\n- **Row 5:** \n  - Vessel: \"marianarray\"\n  - Built: 2011\n  - This row does not support the claim.\n\n- **Row 6:** \n  - Vessel: \"smeaton array\"\n  - Built: 2011\n  - This row does not support the claim.\n\n### Conclusion:\n\n- Total vessels built in 2010: 5 (Rows 0 to 4)\n- Total vessels: 7\n\nThe claim that \"6 of the 7 vessels were built in the year 2010\" is false because only 5 out of 7 vessels were actually built in 2010.\n\n### Relevant Cells:\n\nThe relevant cells for verifying this claim are those under the \"built\" column from each row (since we need to verify the construction year).\n\n```json\n{\n  \"answer\": \"FALSE\",\n  \"relevant_cells\": [\n    {\"row_index\": 0, \"column_name\": \"built\"},\n    {\"row_index\": 1, \"column_name\": \"built\"},\n    {\"row_index\": 2, \"column_name\": \"built\"},\n    {\"row_index\": 3, \"column_name\": \"built\"},\n    {\"row_index\": 4, \"column_name\": \"built\"},\n    {\"row_index\": 5, \"column_name\": \"built\"},\n    {\"row_index\": 6, \"column_name\": \"built\"}\n  ]\n}\n```",
    "true_response": 0,
    "relevant_cells": [
      {
        "row_index": 0,
        "column_name": "built"
      },
      {
        "row_index": 1,
        "column_name": "built"
      },
      {
        "row_index": 2,
        "column_name": "built"
      },
      {
        "row_index": 3,
        "column_name": "built"
      },
      {
        "row_index": 4,
        "column_name": "built"
      },
      {
        "row_index": 5,
        "column_name": "built"
      },
      {
        "row_index": 6,
        "column_name": "built"
      }
    ]
  },
  {
    "table_id": "1-28132970-5.html.csv",
    "claim": "marianarray and smeaton array have a breadth of 6 m",
    "predicted_response": 1,
    "resp": "To determine whether the claim \"Marianarray and Smeaton array have a breadth of 6 m\" is TRUE or FALSE, we need to verify the \"breadth\" for each vessel mentioned in the claim against the data provided in the table.\n\nHere's how we can do it step-by-step:\n\n1. **Identify Relevant Rows:**\n   - The vessels involved in the claim are \"marianarray\" and \"smeaton array\".\n   - We need to locate these two rows within the data section of the JSON.\n\n2. **Locate Vessel Data:**\n   - For \"Marianarray\", it is listed as:\n     - Row Index 5\n     - Column for \"breadth\" shows \"6 m\"\n   - For \"Smeaton array\", it is listed as:\n     - Row Index 6\n     - Column for \"breadth\" also shows \"6 m\"\n\n3. **Check Breadth Values:**\n   - Both vessels, \"Marianarray\" and \"Smeaton array\", have a breadth of \"6 m\".\n\n4. **Conclusion:**\n   - The claim is fully supported by the data in both relevant rows.\n   - Therefore, the answer to the claim is TRUE.\n\n5. **Identify Relevant Cells:**\n   - For \"Marianarray\" (Row Index 5), the relevant column is \"breadth\".\n   - For \"Smeaton array\" (Row Index 6), the relevant column is also \"breadth\".\n\nBased on this analysis, here's the JSON response:\n\n```json\n{\n  \"answer\": \"TRUE\",\n  \"relevant_cells\": [\n    {\"row_index\": 5, \"column_name\": \"breadth\"},\n    {\"row_index\": 6, \"column_name\": \"breadth\"}\n  ]\n}\n```",
    "true_response": 0,
    "relevant_cells": [
      {
        "row_index": 5,
        "column_name": "breadth"
      },
      {
        "row_index": 6,
        "column_name": "breadth"
      }
    ]
  },
  {
    "table_id": "1-28132970-5.html.csv",
    "claim": "smeaton array be the only vessel with a jet",
    "predicted_response": 0,
    "resp": "To determine whether the claim \"smeaton array be the only vessel with a jet\" is true or false, we need to examine the data provided in the table specifically focusing on the propulsion method for each vessel.\n\n### Relevant Table Analysis:\n\n1. **Identify Propulsion Method**:\n   - We are concerned with the column named `\"propulsion\"` because it describes the type of propulsion system used by each vessel.\n   \n2. **Check Each Vessel**:\n   - **Gallion**: `\"prop\"`\n   - **Guardian 1, Guardian 2, Guardian 7, Guardian 9**: All have `\"prop\"`\n   - **Marianarray**: `\"jet\"`\n   - **Smeaton array**: `\"controllable pitch propeller\"`\n\n3. **Evaluate the Claim**:\n   - The claim states that \"smeaton array be the only vessel with a jet.\"\n   - According to the data, `Marianarray` has a `\"jet\"` propulsion system.\n   - `Smeaton array` does not have a `\"jet\"` propulsion; it has a `\"controllable pitch propeller\"`.\n   - Therefore, there is at least one other vessel (`Marianarray`) with a jet propulsion system.\n\n### Conclusion:\n\nThe claim is false because `Marianarray`, not `Smeaton array`, is the vessel with a jet propulsion system. Thus, `Smeaton array` is not the only vessel with a jet.\n\n### Relevant Cells for Verification:\n\n- For `smeaton array`: Check `\"propulsion\"` to confirm it does not have a \"jet\".\n  - Row index: 6\n  - Column name: `\"propulsion\"`\n  \n- For `Marianarray`: Confirm that it has a \"jet\" propulsion.\n  - Row index: 5\n  - Column name: `\"propulsion\"`\n\n```json\n{\n  \"answer\": \"FALSE\",\n  \"relevant_cells\": [\n    {\"row_index\": 6, \"column_name\": \"propulsion\"},\n    {\"row_index\": 5, \"column_name\": \"propulsion\"}\n  ]\n}\n```",
    "true_response": 0,
    "relevant_cells": [
      {
        "row_index": 6,
        "column_name": "propulsion"
      },
      {
        "row_index": 5,
        "column_name": "propulsion"
      }
    ]
  },
  {
    "table_id": "1-28132970-5.html.csv",
    "claim": "the length of all the vessel , except 2 , be 20 m",
    "predicted_response": 0,
    "resp": "To determine the truth of the claim: \"the length of all the vessels, except 2, be 20 m,\" we need to check the 'length' column for each vessel and verify how many vessels have a length different from 20 meters.\n\n1. **Identify relevant column**: The column related to the claim is \"length\".\n\n2. **Evaluate the data**:\n   - Vessel: gallion, Length: 20 m\n   - Vessel: gardian 1, Length: 20 m\n   - Vessel: gardian 2, Length: 20 m\n   - Vessel: gardian 7, Length: 20 m\n   - Vessel: gardian 9, Length: 20 m\n   - Vessel: marianarray, Length: 17 m (different from 20 m)\n   - Vessel: smeaton array, Length: 20 m\n\n3. **Count vessels with length not equal to 20 m**:\n   - Only \"marianarray\" has a length different from 20 meters.\n\n4. **Verify the claim**: The claim states that only 2 vessels should have lengths other than 20 meters. However, we found that only one vessel (\"marianarray\") does not meet this condition.\n\nSince only one vessel deviates from the specified length of 20 m and not two as claimed, the statement is FALSE.\n\n5. **Identify relevant cells**: The rows with deviations or confirming values are:\n   - Row index 0: \"gallion\", Length: 20 m\n   - Row index 1: \"gardian 1\", Length: 20 m\n   - Row index 2: \"gardian 2\", Length: 20 m\n   - Row index 3: \"gardian 7\", Length: 20 m\n   - Row index 4: \"gardian 9\", Length: 20 m\n   - Row index 5: \"marianarray\", Length: 17 m (different from 20 m)\n   - Row index 6: \"smeaton array\", Length: 20 m\n\nHere is the JSON object with the answer and relevant cells:\n\n```json\n{\n  \"answer\": \"FALSE\",\n  \"relevant_cells\": [\n    {\"row_index\": 0, \"column_name\": \"length\"},\n    {\"row_index\": 1, \"column_name\": \"length\"},\n    {\"row_index\": 2, \"column_name\": \"length\"},\n    {\"row_index\": 3, \"column_name\": \"length\"},\n    {\"row_index\": 4, \"column_name\": \"length\"},\n    {\"row_index\": 5, \"column_name\": \"length\"},\n    {\"row_index\": 6, \"column_name\": \"length\"}\n  ]\n}\n```",
    "true_response": 0,
    "relevant_cells": [
      {
        "row_index": 0,
        "column_name": "length"
      },
      {
        "row_index": 1,
        "column_name": "length"
      },
      {
        "row_index": 2,
        "column_name": "length"
      },
      {
        "row_index": 3,
        "column_name": "length"
      },
      {
        "row_index": 4,
        "column_name": "length"
      },
      {
        "row_index": 5,
        "column_name": "length"
      },
      {
        "row_index": 6,
        "column_name": "length"
      }
    ]
  },
  {
    "table_id": "1-28132970-5.html.csv",
    "claim": "the vessel gallionhas the lowest maximum speed of 26 knot",
    "predicted_response": 0,
    "resp": "To determine whether the claim is true or false, we need to verify two parts of it:\n\n1. Identify the maximum speed of the vessel named \"gallion.\"\n2. Compare this speed with all other vessels listed in the table to see if it indeed has the lowest maximum speed.\n\nLet's examine the table:\n\n- The row for \"gallion\" is at `row_index` 0, and its maximum speed is specified as \"30 knots.\"\n\nNow, let's list the maximum speeds of all the vessels in the table:\n- \"gallion\": \"30 knots\"\n- \"gardian 1\": \"30 knots\"\n- \"gardian 2\": \"30 knots\"\n- \"gardian 7\": \"30 knots\"\n- \"gardian 9\": \"30 knots\"\n- \"marianarray\": \"26 knots\"\n- \"smeaton array\": \"30 knots\"\n\nComparing these, we see that:\n- The vessel with the lowest maximum speed is \"marianarray\" at \"26 knots.\"\n\nThe claim states that \"gallion has the lowest maximum speed of 26 knots,\" which is incorrect for two reasons:\n1. \"Gallion\" does not have a maximum speed of 26 knots; it has a maximum speed of 30 knots.\n2. The vessel with the lowest maximum speed (26 knots) is actually \"marianarray.\"\n\nThus, the claim is false.\n\nThe relevant cells to verify this are:\n- The cell for \"gallion\" in the \"max speed\" column (`row_index` 0).\n- The cell for \"marianarray\" in the \"max speed\" column (`row_index` 5), as it has the lowest maximum speed, which is essential to refute the claim.\n\nHere's the JSON response:\n\n```json\n{\n  \"answer\": \"FALSE\",\n  \"relevant_cells\": [\n    {\"row_index\": 0, \"column_name\": \"max speed\"},\n    {\"row_index\": 5, \"column_name\": \"max speed\"}\n  ]\n}\n```",
    "true_response": 0,
    "relevant_cells": [
      {
        "row_index": 0,
        "column_name": "max speed"
      },
      {
        "row_index": 5,
        "column_name": "max speed"
      }
    ]
  }
]