[
  {
    "table_id": "2-1179778-1.html.csv",
    "claim": "there be a total of 4 name / number that have the status of operational",
    "predicted_response": 1,
    "resp": "To determine whether the claim is true or false, we need to identify which rows in the table have a status of \"operational.\" We will examine each row and note those with the specified status.\n\nLet's go through the table:\n\n1. **Row 0**: \n   - Status: operational\n\n2. **Row 1**: \n   - Status: operational\n\n3. **Row 2**: \n   - Status: operational\n\n4. **Row 3**: \n   - Status: operational\n\n5. **Row 4**: \n   - Status: static display\n\n6. **Row 5**: \n   - Status: awaiting restoration\n\n7. **Row 6**: \n   - Status: awaiting restoration\n\n8. **Row 7**: \n   - Status: awaiting restoration\n\nCounting the rows with \"operational\" status, we find there are four such rows (0, 1, 2, and 3).\n\nThus, the claim that \"there be a total of 4 name / number that have the status of operational\" is true.\n\nNow, let's list the relevant cells:\n\n- Row 0: Status column\n- Row 1: Status column\n- Row 2: Status column\n- Row 3: Status column\n\nHere is the JSON response with the answer and relevant cells:\n\n```json\n{\n  \"answer\": \"TRUE\",\n  \"relevant_cells\": [\n    {\"row_index\": 0, \"column_name\": \"status\"},\n    {\"row_index\": 1, \"column_name\": \"status\"},\n    {\"row_index\": 2, \"column_name\": \"status\"},\n    {\"row_index\": 3, \"column_name\": \"status\"}\n  ]\n}\n```",
    "true_response": 1,
    "relevant_cells": [
      {
        "row_index": 0,
        "column_name": "status"
      },
      {
        "row_index": 1,
        "column_name": "status"
      },
      {
        "row_index": 2,
        "column_name": "status"
      },
      {
        "row_index": 3,
        "column_name": "status"
      }
    ]
  },
  {
    "table_id": "2-1179778-1.html.csv",
    "claim": "there be 2 railway build by orenstein and koppel",
    "predicted_response": 1,
    "resp": "To determine whether the claim is true or false, we need to identify the rows in the table where the builder is \"orenstein and koppel\" and count them.\n\n1. **Identify Relevant Rows:**\n   - The relevant column for verifying the claim is \"builder\".\n   - We need to check each row under this column to see if it matches \"orenstein and koppel\".\n\n2. **Check Each Row:**\n\n   - **Row 0:** \n     - Name/Number: irish mail\n     - Builder: hunslet (Not relevant)\n   \n   - **Row 1:** \n     - Name/Number: joffre\n     - Builder: kerr stuart (Not relevant)\n\n   - **Row 2:** \n     - Name/Number: montalban (22)\n     - Builder: orenstein and koppel (Relevant)\n\n   - **Row 3:** \n     - Name/Number: utrillas (21)\n     - Builder: orenstein and koppel (Relevant)\n\n   - **Row 4:** \n     - Name/Number: no 45\n     - Builder: chrzanow (Not relevant)\n\n   - **Row 5:** \n     - Name/Number: no47\n     - Builder: henschel (Not relevant)\n\n   - **Row 6:** \n     - Name/Number: no48\n     - Builder: fowler (Not relevant)\n\n   - **Row 7:** \n     - Name/Number: sybil\n     - Builder: bagnall (Not relevant)\n\n3. **Count the Relevant Rows:**\n   - There are two rows where the builder is \"orenstein and koppel\": Row 2 and Row 3.\n\n4. **Conclusion:**\n   - The claim states there are 2 railways built by Orenstein and Koppel, which matches our findings.\n   \n5. **Relevant Cells:**\n   - Row 2, Column \"builder\"\n   - Row 3, Column \"builder\"\n\nThus, the claim is true.\n\n```json\n{\n  \"answer\": \"TRUE\",\n  \"relevant_cells\": [\n    {\"row_index\": 2, \"column_name\": \"builder\"},\n    {\"row_index\": 3, \"column_name\": \"builder\"}\n  ]\n}\n```",
    "true_response": 1,
    "relevant_cells": [
      {
        "row_index": 2,
        "column_name": "builder"
      },
      {
        "row_index": 3,
        "column_name": "builder"
      }
    ]
  },
  {
    "table_id": "2-1179778-1.html.csv",
    "claim": "the operational status be the most common status among those on the table",
    "predicted_response": 1,
    "resp": "To determine whether the claim is true or false, we need to evaluate the frequency of each status type within the table. The relevant column for this evaluation is \"status.\" We will count how many times each status appears and identify if \"operational\" is indeed the most common.\n\nLet's examine each row in the table:\n\n1. Row 0: Status = \"operational\"\n2. Row 1: Status = \"operational\"\n3. Row 2: Status = \"operational\"\n4. Row 3: Status = \"operational\"\n5. Row 4: Status = \"static display\"\n6. Row 5: Status = \"awaiting restoration\"\n7. Row 6: Status = \"awaiting restoration\"\n8. Row 7: Status = \"awaiting restoration\"\n\nNow, let's tally the occurrences:\n\n- \"Operational\" appears in rows 0, 1, 2, and 3.\n- \"Static display\" appears in row 4.\n- \"Awaiting restoration\" appears in rows 5, 6, and 7.\n\nCount:\n- Operational: 4 times\n- Static display: 1 time\n- Awaiting restoration: 3 times\n\nThe status \"operational\" is indeed the most common status among those listed in the table.\n\nThus, the claim is TRUE. The relevant cells are all those in the \"status\" column where the value contributes to this determination:\n\n```json\n{\n  \"answer\": \"TRUE\",\n  \"relevant_cells\": [\n    {\"row_index\": 0, \"column_name\": \"status\"},\n    {\"row_index\": 1, \"column_name\": \"status\"},\n    {\"row_index\": 2, \"column_name\": \"status\"},\n    {\"row_index\": 3, \"column_name\": \"status\"},\n    {\"row_index\": 4, \"column_name\": \"status\"},\n    {\"row_index\": 5, \"column_name\": \"status\"},\n    {\"row_index\": 6, \"column_name\": \"status\"},\n    {\"row_index\": 7, \"column_name\": \"status\"}\n  ]\n}\n```",
    "true_response": 1,
    "relevant_cells": [
      {
        "row_index": 0,
        "column_name": "status"
      },
      {
        "row_index": 1,
        "column_name": "status"
      },
      {
        "row_index": 2,
        "column_name": "status"
      },
      {
        "row_index": 3,
        "column_name": "status"
      },
      {
        "row_index": 4,
        "column_name": "status"
      },
      {
        "row_index": 5,
        "column_name": "status"
      },
      {
        "row_index": 6,
        "column_name": "status"
      },
      {
        "row_index": 7,
        "column_name": "status"
      }
    ]
  },
  {
    "table_id": "2-1179778-1.html.csv",
    "claim": "there be 3 railway that have only a number and 5 that have a name or a name and number",
    "predicted_response": 1,
    "resp": "To determine whether the claim is true or false, we need to evaluate each entry in the table's first column (\"name / number\") and categorize them based on their content.\n\nThe claim states:\n1. There are 3 railway entries that have only a number.\n2. There are 5 entries with either just a name or a combination of a name and a number.\n\nLet's examine each row in the table:\n\n- **Row 0**: \"irish mail\" \u2014 This is a name, no number.\n- **Row 1**: \"joffre\" \u2014 This is a name, no number.\n- **Row 2**: \"montalban (22)\" \u2014 Contains both a name (\"montalban\") and a number (\"22\").\n- **Row 3**: \"utrillas (21)\" \u2014 Contains both a name (\"utrillas\") and a number (\"21\").\n- **Row 4**: \"no 45\" \u2014 This entry has only numbers, but it starts with \"no\", which implies it's more of a designation than just a number.\n- **Row 5**: \"no47\" \u2014 This entry is considered to have only numbers because \"no\" can be seen as a prefix similar to other entries where names are followed by numbers.\n- **Row 6**: \"no48\" \u2014 Similar to Row 5, this entry is considered to have only numbers for the same reason.\n- **Row 7**: \"sybil\" \u2014 This is a name with no number.\n\nNow let's count based on these interpretations:\n\n1. Entries that have only numbers:\n   - \"no 45\" (Row 4)\n   - \"no47\" (Row 5)\n   - \"no48\" (Row 6)\n\n2. Entries that have either just a name or a combination of a name and number:\n   - \"irish mail\" (Row 0) \u2014 Name only\n   - \"joffre\" (Row 1) \u2014 Name only\n   - \"montalban (22)\" (Row 2) \u2014 Name and number\n   - \"utrillas (21)\" (Row 3) \u2014 Name and number\n   - \"sybil\" (Row 7) \u2014 Name only\n\nThe claim specifies there should be exactly 3 entries with only numbers, which we have identified correctly. Also, the claim states that there should be 5 entries with either a name or both a name and number, which is also correct according to our analysis.\n\nThus, the claim is supported by the data in the table.\n\nHere's the JSON response:\n\n```json\n{\n  \"answer\": \"TRUE\",\n  \"relevant_cells\": [\n    {\"row_index\": 0, \"column_name\": \"name / number\"},\n    {\"row_index\": 1, \"column_name\": \"name / number\"},\n    {\"row_index\": 2, \"column_name\": \"name / number\"},\n    {\"row_index\": 3, \"column_name\": \"name / number\"},\n    {\"row_index\": 4, \"column_name\": \"name / number\"},\n    {\"row_index\": 5, \"column_name\": \"name / number\"},\n    {\"row_index\": 6, \"column_name\": \"name / number\"},\n    {\"row_index\": 7, \"column_name\": \"name / number\"}\n  ]\n}\n```",
    "true_response": 1,
    "relevant_cells": [
      {
        "row_index": 0,
        "column_name": "name / number"
      },
      {
        "row_index": 1,
        "column_name": "name / number"
      },
      {
        "row_index": 2,
        "column_name": "name / number"
      },
      {
        "row_index": 3,
        "column_name": "name / number"
      },
      {
        "row_index": 4,
        "column_name": "name / number"
      },
      {
        "row_index": 5,
        "column_name": "name / number"
      },
      {
        "row_index": 6,
        "column_name": "name / number"
      },
      {
        "row_index": 7,
        "column_name": "name / number"
      }
    ]
  },
  {
    "table_id": "2-1179778-1.html.csv",
    "claim": "there be 3 railway that be currently still in operation",
    "predicted_response": 0,
    "resp": "To determine whether the claim is true or false, we need to evaluate each row in the table for its status and identify which railway locomotives are currently operational.\n\n### Steps:\n1. **Identify Relevant Column:** The \"status\" column is relevant as it indicates if a railway is operational.\n2. **Review Each Row:** Check the value in the \"status\" column for all rows to determine how many railroads have an \"operational\" status.\n\nLet's review each row based on the \"status\" column:\n\n- **Row 0 (Irish Mail):** Status is \"operational\".\n- **Row 1 (Joffre):** Status is \"operational\".\n- **Row 2 (Montalban (22)):** Status is \"operational\".\n- **Row 3 (Utrillas (21)):** Status is \"operational\".\n- **Row 4 (No 45):** Status is \"static display\".\n- **Row 5 (No47):** Status is \"awaiting restoration\".\n- **Row 6 (No48):** Status is \"awaiting restoration\".\n- **Row 7 (Sybil):** Status is \"awaiting restoration\".\n\nFrom the above review, rows 0, 1, 2, and 3 have a status of \"operational\". Therefore, there are four operational railways in total.\n\n### Conclusion:\nThe claim states that there are three railway locomotives currently still in operation. The table indicates there are actually four.\n\n**Answer:**\n\n```json\n{\n  \"answer\": \"FALSE\",\n  \"relevant_cells\": [\n    {\"row_index\": 0, \"column_name\": \"status\"},\n    {\"row_index\": 1, \"column_name\": \"status\"},\n    {\"row_index\": 2, \"column_name\": \"status\"},\n    {\"row_index\": 3, \"column_name\": \"status\"}\n  ]\n}\n```",
    "true_response": 0,
    "relevant_cells": [
      {
        "row_index": 0,
        "column_name": "status"
      },
      {
        "row_index": 1,
        "column_name": "status"
      },
      {
        "row_index": 2,
        "column_name": "status"
      },
      {
        "row_index": 3,
        "column_name": "status"
      }
    ]
  },
  {
    "table_id": "2-1179778-1.html.csv",
    "claim": "world war 1 be mention in the note the same amount of time as wale",
    "predicted_response": 1,
    "resp": "To determine the truth of the claim, we need to evaluate how many times \"World War I\" (or its abbreviation \"WW1\") is mentioned in the \"notes\" column compared to how many times \"Wales\" appears in that same column.\n\nLet's examine each row in the \"notes\" column:\n\n1. Row 0 (\"irish mail\"): Notes mention \"ex dinorwic slate quarry, wales\". The word \"Wales\" appears once.\n2. Row 1 (\"joffre\"): Notes mention \"ex ww1 french artillery railways\". The term \"WW1\" appears once.\n3. Row 2 (\"montalban (22)\"): No mention of either \"World War I\" or \"Wales\".\n4. Row 3 (\"utrillas (21)\"): No mention of either \"World War I\" or \"Wales\".\n5. Row 4 (\"no 45\"): No mention of either \"World War I\" or \"Wales\".\n6. Row 5 (\"no47\"): Notes mention \"ex ww1 german feldbahn\". The term \"WW1\" appears once.\n7. Row 6 (\"no48\"): No mention of either \"World War I\" or \"Wales\".\n8. Row 7 (\"sybil\"): Notes mention \"ex dinorwic slate quarry, wales\". The word \"Wales\" appears once.\n\nNow, let's count the occurrences:\n- \"WW1\" is mentioned in rows 1 and 5, totaling 2 times.\n- \"Wales\" is mentioned in rows 0 and 7, totaling 2 times.\n\nThe claim states that \"World War I\" (or \"WW1\") is mentioned the same amount of time as \"Wale\". Given our analysis, this statement is true since both terms appear twice in their respective contexts.\n\nHere's the JSON object representing our conclusion:\n\n```json\n{\n  \"answer\": \"TRUE\",\n  \"relevant_cells\": [\n    {\"row_index\": 0, \"column_name\": \"notes\"},\n    {\"row_index\": 1, \"column_name\": \"notes\"},\n    {\"row_index\": 5, \"column_name\": \"notes\"},\n    {\"row_index\": 7, \"column_name\": \"notes\"}\n  ]\n}\n```",
    "true_response": 1,
    "relevant_cells": [
      {
        "row_index": 0,
        "column_name": "notes"
      },
      {
        "row_index": 1,
        "column_name": "notes"
      },
      {
        "row_index": 5,
        "column_name": "notes"
      },
      {
        "row_index": 7,
        "column_name": "notes"
      }
    ]
  },
  {
    "table_id": "2-1179778-1.html.csv",
    "claim": "orenstein and koppel only make 1 railway",
    "predicted_response": 0,
    "resp": "To evaluate the claim \"orenstein and koppel only make 1 railway,\" we need to identify all rows in the table where \"orenstein and koppel\" is listed as the builder and count these instances.\n\nThe relevant column for checking this claim is the \"builder\" column, which indicates the manufacturer of each railway. We will examine each row to see if \"orenstein and koppel\" appears there.\n\n1. In the first row:\n   - Column: builder\n   - Value: hunslet (Not relevant)\n\n2. In the second row:\n   - Column: builder\n   - Value: kerr stuart (Not relevant)\n\n3. In the third row:\n   - Column: builder\n   - Value: orenstein and koppel (Relevant)\n   \n4. In the fourth row:\n   - Column: builder\n   - Value: orenstein and koppel (Relevant)\n\n5. In the fifth row:\n   - Column: builder\n   - Value: chrzanow (Not relevant)\n\n6. In the sixth row:\n   - Column: builder\n   - Value: henschel (Not relevant)\n\n7. In the seventh row:\n   - Column: builder\n   - Value: fowler (Not relevant)\n\n8. In the eighth row:\n   - Column: builder\n   - Value: bagnall (Not relevant)\n\nFrom this examination, we see that \"orenstein and koppel\" is listed as the builder for two different railways:\n\n- Row 3: montalban (22)\n- Row 4: utrillas (21)\n\nSince \"orenstein and koppel\" appears in more than one row, they make more than one railway according to this table.\n\nTherefore, the claim that \"orenstein and koppel only make 1 railway\" is FALSE. The relevant cells are those where \"orenstein and koppel\" appears as the builder.\n\n```json\n{\n  \"answer\": \"FALSE\",\n  \"relevant_cells\": [\n    {\"row_index\": 2, \"column_name\": \"builder\"},\n    {\"row_index\": 3, \"column_name\": \"builder\"}\n  ]\n}\n```",
    "true_response": 0,
    "relevant_cells": [
      {
        "row_index": 2,
        "column_name": "builder"
      },
      {
        "row_index": 3,
        "column_name": "builder"
      }
    ]
  },
  {
    "table_id": "2-1179778-1.html.csv",
    "claim": "most of the railway on the list be either await restoration or a static display",
    "predicted_response": 0,
    "resp": "To determine whether the claim is true or false, we need to analyze the status of each railway listed in the table. The claim states that most of the railways are either \"awaiting restoration\" or a \"static display\". Let's evaluate this by examining the 'status' column for each row.\n\nThe table has 8 rows (excluding the header), and the relevant data from the 'status' column is as follows:\n\n1. Irish Mail - operational\n2. Joffre - operational\n3. Montalban (22) - operational\n4. Utrillas (21) - operational\n5. No 45 - static display\n6. No47 - awaiting restoration\n7. No48 - awaiting restoration\n8. Sybil - awaiting restoration\n\nNow, let's count how many railways fall under each status category:\n\n- Operational: 4 railways (Irish Mail, Joffre, Montalban (22), Utrillas (21))\n- Awaiting Restoration: 3 railways (No47, No48, Sybil)\n- Static Display: 1 railway (No 45)\n\nFor the claim to be true, more than half of the total railways should be either \"awaiting restoration\" or a \"static display\". This means at least 5 out of 8 railways must meet this condition.\n\nCalculating the number:\n- Awaiting Restoration + Static Display = 3 + 1 = 4 railways\n\nSince only 4 railways are either \"awaiting restoration\" or a \"static display\", which is not more than half, the claim is false.\n\nThe relevant cells to verify this are all rows in the 'status' column:\n\n```json\n{\n  \"answer\": \"FALSE\",\n  \"relevant_cells\": [\n    {\"row_index\": 0, \"column_name\": \"status\"},\n    {\"row_index\": 1, \"column_name\": \"status\"},\n    {\"row_index\": 2, \"column_name\": \"status\"},\n    {\"row_index\": 3, \"column_name\": \"status\"},\n    {\"row_index\": 4, \"column_name\": \"status\"},\n    {\"row_index\": 5, \"column_name\": \"status\"},\n    {\"row_index\": 6, \"column_name\": \"status\"},\n    {\"row_index\": 7, \"column_name\": \"status\"}\n  ]\n}\n```",
    "true_response": 0,
    "relevant_cells": [
      {
        "row_index": 0,
        "column_name": "status"
      },
      {
        "row_index": 1,
        "column_name": "status"
      },
      {
        "row_index": 2,
        "column_name": "status"
      },
      {
        "row_index": 3,
        "column_name": "status"
      },
      {
        "row_index": 4,
        "column_name": "status"
      },
      {
        "row_index": 5,
        "column_name": "status"
      },
      {
        "row_index": 6,
        "column_name": "status"
      },
      {
        "row_index": 7,
        "column_name": "status"
      }
    ]
  },
  {
    "table_id": "2-1179778-1.html.csv",
    "claim": "the numbered railway with a regular name and a number be 1 more than the station that be solely numbered",
    "predicted_response": 1,
    "resp": "To determine whether the claim is true or false, we need to break down the statement and verify it against the data in the table.\n\n### Claim Breakdown\n\nThe claim states: \"the numbered railway with a regular name and a number be 1 more than the station that be solely numbered.\"\n\nThis implies:\n- We are looking for entries where the \"name / number\" contains both text (a regular name) and digits (a number).\n- Among these entries, there should be an increment by 1 in the numbering part compared to an entry with only a number (no accompanying text).\n\n### Table Analysis\n\nWe will examine each row's \"name / number\":\n\n1. **Row 0**: `irish mail` - No numbers present; solely a regular name.\n2. **Row 1**: `joffre` - No numbers present; solely a regular name.\n3. **Row 2**: `montalban (22)` - Contains both text (`montalban`) and number (`22`). This fits the \"numbered railway with a regular name.\"\n4. **Row 3**: `utrillas (21)` - Contains both text (`utrillas`) and number (`21`).\n5. **Row 4**: `no 45` - Contains only a number (`45`) prefixed by the word \"no.\" This is considered solely numbered.\n6. **Row 5**: `no47` - Contains only a number (`47`) prefixed by the word \"no.\" This is considered solely numbered.\n7. **Row 6**: `no48` - Contains only a number (`48`) prefixed by the word \"no.\" This is considered solely numbered.\n8. **Row 7**: `sybil` - No numbers present; solely a regular name.\n\n### Verification\n\nWe need to find if there exists a case where:\n- A row with both text and number (e.g., \"montalban (22)\") has its numerical part incremented by 1 compared to another row that is purely numbered (e.g., \"utrillas (21)\").\n\n**Observations:**\n- `montalban (22)` in Row 2 is followed by `utrillas (21)` in Row 3. Here, the number `22` is indeed 1 more than `21`.\n  \nThus, this confirms that the claim holds true based on the data provided.\n\n### Relevant Cells\n\nThe relevant cells to verify the claim are:\n- Row 2: \"montalban (22)\"\n- Row 3: \"utrillas (21)\"\n\nThese rows confirm that a numbered railway with a regular name and number is indeed 1 more than a solely numbered entry.\n\n```json\n{\n  \"answer\": \"TRUE\",\n  \"relevant_cells\": [\n    {\"row_index\": 2, \"column_name\": \"name / number\"},\n    {\"row_index\": 3, \"column_name\": \"name / number\"}\n  ]\n}\n```",
    "true_response": 0,
    "relevant_cells": [
      {
        "row_index": 2,
        "column_name": "name / number"
      },
      {
        "row_index": 3,
        "column_name": "name / number"
      }
    ]
  },
  {
    "table_id": "2-1179778-1.html.csv",
    "claim": "world war 1 have more mention in the note than wale",
    "predicted_response": 0,
    "resp": "To determine if the claim is true or false, we need to analyze the \"notes\" column in the table and count how many times \"World War 1\" (or related terms) and \"Wales\" are mentioned.\n\nLet's examine each row in the \"notes\" column:\n\n1. **Row 0:**\n   - Notes: \"ex dinorwic slate quarry, wales\"\n   - Mentions \"Wales\"\n\n2. **Row 1:**\n   - Notes: \"ex ww1 french artillery railways\"\n   - Mentions \"World War 1\" (as \"ww1\")\n\n3. **Row 2:**\n   - Notes: \"ex minas y ferrocarril de utrillas, aragon, spain\"\n   - No mention of \"World War 1\" or \"Wales\"\n\n4. **Row 3:**\n   - Notes: \"ex minas y ferrocarril de utrillas, aragon, spain\"\n   - No mention of \"World War 1\" or \"Wales\"\n\n5. **Row 4:**\n   - Notes: \"ex polish 2ft gauge\"\n   - No mention of \"World War 1\" or \"Wales\"\n\n6. **Row 5:**\n   - Notes: \"ex ww1 german feldbahn\"\n   - Mentions \"World War 1\" (as \"ww1\")\n\n7. **Row 6:**\n   - Notes: \"ex sena sugar estates, mozambique\"\n   - No mention of \"World War 1\" or \"Wales\"\n\n8. **Row 7:**\n   - Notes: \"ex dinorwic slate quarry, wales\"\n   - Mentions \"Wales\"\n\nNow, let's count the mentions:\n\n- \"World War 1\": 2 mentions (Rows 1 and 5)\n- \"Wales\": 2 mentions (Rows 0 and 7)\n\nThe claim states that \"World War 1 have more mention in the note than Wales.\" Since both are mentioned an equal number of times, the claim is false.\n\nRelevant cells for verification:\n\n- Row 0, Column \"notes\"\n- Row 1, Column \"notes\"\n- Row 5, Column \"notes\"\n- Row 7, Column \"notes\"\n\nHere's the JSON response:\n\n```json\n{\n  \"answer\": \"FALSE\",\n  \"relevant_cells\": [\n    {\"row_index\": 0, \"column_name\": \"notes\"},\n    {\"row_index\": 1, \"column_name\": \"notes\"},\n    {\"row_index\": 5, \"column_name\": \"notes\"},\n    {\"row_index\": 7, \"column_name\": \"notes\"}\n  ]\n}\n```",
    "true_response": 0,
    "relevant_cells": [
      {
        "row_index": 0,
        "column_name": "notes"
      },
      {
        "row_index": 1,
        "column_name": "notes"
      },
      {
        "row_index": 5,
        "column_name": "notes"
      },
      {
        "row_index": 7,
        "column_name": "notes"
      }
    ]
  }
]